{"version":3,"sources":["components/Nav.js","utils/api.js","utils/helpers.js","components/PostMetaInfo.js","components/Title.js","components/PostsList.js","components/Posts.js","components/Loading.js","components/Comment.js","components/Post.js","components/User.js","App.js","index.js"],"names":["activeStyle","color","Nav","react_default","a","createElement","className","react_router_dom","to","exact","api","json","removeDead","posts","filter","Boolean","_ref","dead","removeDeleted","_ref2","deleted","onlyPosts","_ref4","type","fetchItem","id","fetch","concat","then","res","fetchMainPosts","ids","Error","slice","Promise","all","map","formatDate","timestamp","Date","toLocaleDateString","hour","minute","PostMetaInfo","by","time","descendants","Title","url","title","href","PostsList","length","post","key","components_Title","Posts","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","catch","_ref3","message","stop","apply","this","arguments","handleFetch","components_PostsList","styles","content","fontSize","position","left","right","marginTop","textAlign","Loading","text","speed","setContent","interval","window","setInterval","clearInterval","style","defaultProps","Comment","comment","Post","props","setPost","loadingPost","setLoadingPost","comments","setComments","_useState7","_useState8","loadingComments","setLoadingComments","_useState9","_useState10","queryString","parse","location","search","kids","react","components_Loading","components_Comment","User","user","setUser","loadingUser","setLoadingUser","loadingPosts","setLoadingPosts","fetchUser","submitted","created","karma","toLocaleString","about","App","react_router","path","render","components_Posts","component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3b3b9aef.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst activeStyle = {\r\n    color: 'rgb(187, 46, 31)'\r\n}\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav className='row space-between'>\r\n            <ul className='row nav'>\r\n                <li>\r\n                    <NavLink\r\n                        to='/'\r\n                        exact\r\n                        activeStyle={activeStyle}\r\n                        className='nav-link'>\r\n                        Top\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                        to='/new'\r\n                        activeStyle={activeStyle}\r\n                        className='nav-link'>\r\n                        New\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","const api = `https://hacker-news.firebaseio.com/v0`\r\nconst json = '.json?print=pretty'\r\n\r\nfunction removeDead(posts) {\r\n    return posts.filter(Boolean).filter(({ dead }) => dead !== true)\r\n}\r\n\r\nfunction removeDeleted(posts) {\r\n    return posts.filter(({ deleted }) => deleted !== true)\r\n}\r\n\r\nfunction onlyComments(posts) {\r\n    return posts.filter(({ type }) => type === 'comment')\r\n}\r\n\r\nfunction onlyPosts(posts) {\r\n    return posts.filter(({ type }) => type === 'story')\r\n}\r\n\r\nexport function fetchItem(id) {\r\n    return fetch(`${api}/item/${id}${json}`)\r\n        .then((res) => res.json())\r\n}\r\n\r\nexport function fetchComments(ids) {\r\n    return Promise.all(ids.map(fetchItem))\r\n        .then((comments) => removeDeleted(onlyComments(removeDead(comments))))\r\n}\r\n\r\nexport function fetchMainPosts(type) {\r\n    return fetch(`${api}/${type}stories${json}`)\r\n        .then((res) => res.json())\r\n        .then((ids) => {\r\n            if (!ids) {\r\n                throw new Error(`There was an error fetching the ${type} posts.`)\r\n            }\r\n\r\n            return ids.slice(0, 50)\r\n        })\r\n        .then((ids) => Promise.all(ids.map(fetchItem)))\r\n        .then((posts) => removeDeleted(onlyPosts(removeDead(posts))))\r\n}\r\n\r\nexport function fetchUser(id) {\r\n    return fetch(`${api}/user/${id}${json}`)\r\n        .then((res) => res.json())\r\n}\r\n\r\nexport function fetchPosts(ids) {\r\n    return Promise.all(ids.map(fetchItem))\r\n        .then((posts) => removeDeleted(onlyPosts(removeDead(posts))))\r\n}","export function formatDate(timestamp) {\n    return new Date(timestamp * 1000)\n        .toLocaleDateString(\"en-US\", {\n            hour: 'numeric',\n            minute: 'numeric'\n        })\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { formatDate } from '../utils/helpers'\n\nexport default function PostMetaInfo({ by, time, id, descendants }) {\n    return (\n        <div className={'meta-info-light'}>\n            <span>by <Link to={`/user?id=${by}`}>{by}</Link></span>\n            <span>on {formatDate(time)}</span>\n            {typeof descendants === 'number' && (\n                <span>\n                    with <Link to={`/post?id=${id}`}>{descendants}</Link> comments\n            </span>\n            )}\n        </div>\n    )\n}\n\nPostMetaInfo.propTypes = {\n    by: PropTypes.string.isRequired,\n    time: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    descendants: PropTypes.number,\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Title = ({ url, title, id }) => {\n    return url\n        ? <a className='link' href={url}>{title}</a>\n        : <Link className='link' to={`/post?id=${id}`}>{title}</Link>\n}\n\nTitle.propTypes = {\n    url: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired\n}\n\nexport default Title;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PostMetaInfo from './PostMetaInfo'\nimport Title from './Title'\n\nconst PostsList = ({ posts }) => {\n    if (posts.length === 0) {\n        return (\n            <p className='center-text'>\n                This user hasn't posted yet\n            </p>\n        )\n    }\n\n    return (\n        <ul>\n            {posts.map((post) => {\n                return (\n                    <li key={post.id} className='post'>\n                        <Title url={post.url} title={post.title} id={post.id} />\n                        <PostMetaInfo\n                            by={post.by}\n                            time={post.time}\n                            id={post.id}\n                            descendants={post.descendants}\n                        />\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nPostsList.propTypes = {\n    posts: PropTypes.array.isRequired\n}\n\nexport default PostsList;","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { fetchMainPosts } from '../utils/api'\n// import Loading from './Loading'\nimport PostsList from './PostsList'\n\nconst Posts = ({ type }) => {\n\n    const [posts, setPosts] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const handleFetch = async () => {\n            setPosts(null);\n            setError(null);\n            setLoading(true);\n\n            fetchMainPosts(type)\n                .then((posts) => {\n                    setPosts(posts);\n                    setLoading(false);\n                    setError(null);\n                })\n                .catch(({ message }) => {\n                    setError(message);\n                    setLoading(false);\n                })\n        }\n\n            handleFetch();\n    }, [type]);\n\n\n    if (loading === true) {\n        // return <Loading />\n        return <h1>Loading</h1>\n    }\n\n    if (error) {\n        return <p className='center-text error'>{error}</p>\n    }\n\n    return <PostsList posts={posts} />\n}\n\nPosts.propTypes = {\n    type: PropTypes.oneOf(['top', 'new'])\n}\n\nexport default Posts;","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n    content: {\n        fontSize: '35px',\n        position: 'absolute',\n        left: '0',\n        right: '0',\n        marginTop: '20px',\n        textAlign: 'center',\n    }\n}\n\nconst Loading = ({ text, speed }) => {\n\n    const [content, setContent] = useState(text);\n\n    useEffect(() => {\n        let interval = window.setInterval(() => {\n            content === text + '...'\n                ? setContent(text)\n                : setContent(content + '.')\n        }, speed);\n        return window.clearInterval(interval);\n    })\n\n    return (\n        <p style={styles.content}>\n            {content}\n        </p>\n    )\n}\n\n\nLoading.propTypes = {\n    text: PropTypes.string.isRequired,\n    speed: PropTypes.number.isRequired,\n}\n\nLoading.defaultProps = {\n    text: 'Loading',\n    speed: 300\n}\n\nexport default Loading;","import React from 'react'\nimport PostMetaInfo from './PostMetaInfo'\n\nconst Comment = ({ comment }) => {\n    return (\n        <div className='comment'>\n            <PostMetaInfo\n                comment={true}\n                by={comment.by}\n                time={comment.time}\n                id={comment.id}\n            />\n            <p>{comment.text}</p>\n        </div>\n    )\n}\n\nexport default Comment;","import React, { Fragment, useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport { fetchItem, fetchComments } from '../utils/api'\nimport Loading from './Loading'\nimport PostMetaInfo from './PostMetaInfo'\nimport Title from './Title'\nimport Comment from './Comment'\n\nconst Post = (props) => {\n\n    const [post, setPost] = useState(null);\n    const [loadingPost, setLoadingPost] = useState(true);\n    const [comments, setComments] = useState(null);\n    const [loadingComments, setLoadingComments] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const { id } = queryString.parse(props.location.search);\n\n        fetchItem(id)\n            .then((post) => {\n                setPost(post);\n                setLoadingPost(false);\n\n                return fetchComments(post.kids || [])\n            })\n            .then((comments) => {\n                setComments(comments);\n                setLoadingComments(false);\n            })\n            .catch(({ message }) => {\n                setError(message);\n                setLoadingPost(false);\n                setLoadingComments(false);\n            })\n\n    })\n\n    return error\n        ? <p className='center-text error'>{error}</p>\n        : (\n            <Fragment>\n                {loadingPost === true\n                    ? <Loading text='Fetching post' />\n                    : <Fragment>\n                        <h1 className='header'>\n                            <Title url={post.url} title={post.title} id={post.id} />\n                        </h1>\n                        <PostMetaInfo\n                            by={post.by}\n                            time={post.time}\n                            id={post.id}\n                            descendants={post.descendants}\n                        />\n                        <p>{post.text}</p>\n                    </Fragment>}\n                {loadingComments === true\n                    ? loadingPost === false && <Loading text='Fetching comments' />\n                    : <Fragment>\n                        {comments.map((comment) =>\n                            <Comment\n                                key={comment.id}\n                                comment={comment}\n                            />\n                        )}\n                    </Fragment>}\n            </Fragment>\n        )\n}\n\n\nexport default Post;","import React, { Fragment, useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport { fetchUser, fetchPosts } from '../utils/api'\nimport Loading from './Loading'\nimport { formatDate } from '../utils/helpers'\nimport PostsList from './PostsList'\n\nconst User = (props) => {\n\n    const [user, setUser] = useState(null);\n    const [loadingUser, setLoadingUser] = useState(true);\n    const [posts, setPosts] = useState(null);\n    const [loadingPosts, setLoadingPosts] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const { id } = queryString.parse(props.location.search);\n\n        fetchUser(id)\n            .then((user) => {\n                setUser(user);\n                setLoadingUser(false);\n\n                return fetchPosts(user.submitted.slice(0, 30));\n            })\n            .then((posts) => {\n                setPosts(posts);\n                setLoadingPosts(false);\n                setError(null);\n            })\n            .catch(({ message }) => {\n                setError(message);\n                setLoadingUser(false);\n                setLoadingPosts(false);\n            })\n    })\n\n    return error\n        ? <p className='center-text error'>{error}</p>\n        : (\n            <Fragment>\n                {loadingUser === true\n                    ? <Loading text='Fetching User' />\n                    : <Fragment>\n                        <h1 className='header'>{user.id}</h1>\n                        <div className='meta-info-light'>\n                            <span>joined <b>{formatDate(user.created)}</b></span>\n                            <span>has <b>{user.karma.toLocaleString()}</b> karma</span>\n                        </div>\n                        <p>{user.about}</p>\n                    </Fragment>}\n                {loadingPosts === true\n                    ? loadingUser === false && <Loading text='Fetching posts' />\n                    : <Fragment>\n                        <h2>Posts</h2>\n                        <PostsList posts={posts} />\n                    </Fragment>}\n            </Fragment>\n        )\n}\n\n\nexport default User","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Nav from './components/Nav';\r\nimport Posts from './components/Posts';\r\nimport Post from './components/Post';\r\nimport User from './components/User';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className='light'>\r\n      <div className='container'>\r\n        <Nav />\r\n\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/'\r\n            render={() => <Posts type='top' />}\r\n          />\r\n          <Route\r\n            path='/new'\r\n            render={() => <Posts type='new' />}\r\n          />\r\n          <Route path='/post' component={Post} />\r\n          <Route path='/user' component={User} />\r\n          <Route render={() => <h1>404</h1>} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\r\n"],"sourceRoot":""}